/*
===============================================================================================================================
               ULTIMAS ATUALIZAÇÕES EFETUADAS - CONSULTAR LOG DO VERSIONADOR PARA HISTORICO COMPLETO
===============================================================================================================================
 Autor            |    Data    |                              Motivo                      										 
-------------------------------------------------------------------------------------------------------------------------------
 Josué Danich     | 11/03/2019 | Ajuste para loboguara e emissão de qualquer pv - Chamado 28387 
-------------------------------------------------------------------------------------------------------------------------------
 Jerry            | 23/08/2019 | Incluir Obs Comercial e Obs Recebimento do Cliente no Rel. Pré-Nota Vendas - Chamado 30358
-------------------------------------------------------------------------------------------------------------------------------
Lucas Borges  | 16/10/2019 | Removidos os Warning na compilação da release 12.1.25. Chamado 28346
===============================================================================================================================
*/
//====================================================================================================
// Definicoes de Includes e Defines da Rotina.
//====================================================================================================
#INCLUDE "PROTHEUS.CH"
                               
/*
===============================================================================================================================
Programa----------: ROMS007
Autor-------------: Jeovane
Data da Criacao---: 30/07/2009
===============================================================================================================================
Descrição---------: Impressão da Pré-Nota - Compatibilização de filtros customizados na rotina padrão
===============================================================================================================================
Parametros--------: Nenhum
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
User function ROMS007()  

Local oReport		:= Nil

private cPerg		:= "ROMS007"   
private cComboTpCa	:= {}
private _aTpCarga 	:= {}

//Utilizado para pegar dinamicamento o tipo da carga
dbSelectArea("SX3")
SX3->(dbSetOrder(2))
if SX3->(dbSeek("DAK_I_TPCA"))
		cComboTpCa := X3Cbox()
endif     
		
_aTpCarga := STRTOKARR(cComboTpCa, ';')  
                
fwMsgRun( , {|| oReport := U_ROMS007R(),oReport:PrintDialog() }, "Impressão da Pré-Nota", "Aguarde! Iniciando o processo..."  )

Return()
/*
===============================================================================================================================
Programa--------: ROMS007R()
Autor-----------: Marco Bianchi 
Data da Criacao-: 10/07/06 
===============================================================================================================================
Descrição-------: Criação do objeto do relatório Treport  
===============================================================================================================================
Parametros------: Nenhum
===============================================================================================================================
Retorno---------: Nenhum
===============================================================================================================================*/
User Function ROMS007R()

Local oReport	:= Nil
Local oPreNota	:= Nil
Local nValImp  	:= 0
Local nUltLib  	:= 0
Local aCabPed	:= {}
Local aItemPed  := {}
Local nItem 	:= 0
Local nTamData  := Len( DTOC( MsDate() ) )
Local aOrdem    :={}

Private aCodImps:= {}
Private nI		:= 0

Aadd( aOrdem, "CEP + Pedido + Item" )
Aadd( aOrdem, "Pedido + Item" )

Pergunte( cPerg , .F. )

If FunName() == "MATA410"

	cPerg		:= ""
	MV_PAR01	:= SC5->C5_NUM
	MV_PAR02	:= SC5->C5_NUM
	MV_PAR03	:= STOD('')
	MV_PAR04	:= STOD('')
	MV_PAR05	:= ""
	MV_PAR06	:= ""
	MV_PAR07	:= ""
	MV_PAR08	:= ""
	MV_PAR09	:= STOD('')
	MV_PAR10	:= STOD('')
	MV_PAR11	:= ""
	MV_PAR12	:= ""
	MV_PAR13	:= 2
	
EndIf

If FunName() == "AOMS109"

	cPerg		:= ""
	MV_PAR01	:= ""
	MV_PAR02	:= ""
	MV_PAR03	:= STOD('')
	MV_PAR04	:= STOD('')
	MV_PAR05	:= ""
	MV_PAR06	:= ""
	MV_PAR07	:= ""
	MV_PAR08	:= ""
	MV_PAR09	:= STOD('')
	MV_PAR10	:= STOD('')
	MV_PAR11	:= ""
	MV_PAR12	:= ""
	MV_PAR13	:= 2
	MV_PAR14    := ""
	
EndIf

oReport := TReport():New( "ROMS007" , 'Emissao da Confirmacao do Pedido' , cPerg ,;
 			{|oReport| ROMS007P(oReport,oPreNota,@nItem,aItemPed,aCabPed)},;
 			'Emissao da confirmacao dos pedidos de venda, de acordo com intervalo informado na opcaoo Parametros.')	
 			
oReport:SetLandscape() 
oReport:SetTotalInLine(.F.)

//==========================================================================
// Secao dos itens do Pedido de Vendas                                    
//==========================================================================
oPreNota := TRSection():New(oReport,"Emissao da Confirmacao do Pedido",{"SC5","SC6"},aOrdem/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)	// 
oPreNota:SetTotalInLine(.F.)

TRCell():New(oPreNota,"AITEM01",/*Tabela*/,"IT"						 ,PesqPict("SC6","C6_ITEM"		),TamSx3("C6_ITEM"		)[1],/*lPixel*/,{|| aItemPed[nItem][01] 																	})	// "IT"
TRCell():New(oPreNota,"AITEM02",/*Tabela*/,RetTitle("C6_PRODUTO"	),PesqPict("SC6","C6_PRODUTO"	),TamSx3("C6_PRODUTO"	)[1],/*lPixel*/,{|| aItemPed[nItem][02] 																	})	// Codigo do Produto
TRCell():New(oPreNota,"AITEM03",/*Tabela*/,RetTitle("C6_DESCRI"  	),PesqPict("SC6","C6_DESCRI"	),TamSx3("C6_DESCRI"	)[1],/*lPixel*/,{|| IIF(Empty(aItemPed[nItem][03]),SB1->B1_DESC, aItemPed[nItem][03])						})	// Descricao do Produto
TRCell():New(oPreNota,"AITEM04",/*Tabela*/,"TES"					 ,PesqPict("SC6","C6_TES"		),TamSx3("C6_TES"		)[1],/*lPixel*/,{|| aItemPed[nItem][04] 																	})	// "TES"
TRCell():New(oPreNota,"AITEM05",/*Tabela*/,"CF"					 	,PesqPict("SC6","C6_CF"		),TamSx3("C6_CF"		)[1],/*lPixel*/,{|| aItemPed[nItem][05] 																	})	// "CF"
TRCell():New(oPreNota,"AITEM06",/*Tabela*/,"UM"					 	,PesqPict("SC6","C6_UM"		),TamSx3("C6_UM"		)[1],/*lPixel*/,{|| aItemPed[nItem][06] 																	})	// "UM"
TRCell():New(oPreNota,"AITEM07",/*Tabela*/,"QTDE"					 ,PesqPictQt("C6_QTDVEN"	    ),TamSx3("C6_QTDVEN"	)[1],/*lPixel*/,{|| aItemPed[nItem][07] 																	})	// "Quant."
TRCell():New(oPreNota,"C6_SEGUM",/*Tabela*/,RetTitle("C6_SEGUM" 	),PesqPict("SC6","C6_SEGUM"		),TamSx3("C6_SEGUM"		)[1],/*lPixel*/,{|| aItemPed[nItem][20] 																	})	// "UM"
TRCell():New(oPreNota,"C6_UNSVEN",/*Tabela*/,RetTitle("C6_UNSVEN"	),PesqPict("SC6","C6_UNSVEN"		),TamSx3("C6_UNSVEN"		)[1],/*lPixel*/,{|| aItemPed[nItem][21] 																	})	// "QTD ENT 2"
TRCell():New(oPreNota,"AITEM08",/*Tabela*/,RetTitle("C6_PRCVEN"	    ),PesqPict("SC6","C6_PRCVEN"	),TamSx3("C6_PRCVEN"	)[1],/*lPixel*/,{|| aItemPed[nItem][08] 																	})	// Preco Unitario
TRCell():New(oPreNota,"NALIQICM",/*Tabela*/	,"ICM","@e 99.99"				,5,/*lPixel*/,{|| MaFisRet(nItem,"IT_ALIQICM") 																											})	// "ICM"
TRCell():New(oPreNota,"AITEM13",/*Tabela*/, "Vlr Total"				,PesqPict("SC6","C6_VALOR")		,TamSx3("C6_VALOR")[1]		,/*lPixel*/,{|| aItemPed[nItem][13]+nValImp 														})	// "Vl.Tot.C/IPI"
TRCell():New(oPreNota,"AITEM14",/*Tabela*/,RetTitle("C6_ENTREG")	,PesqPict("SC6","C6_ENTREG"	)	,nTamData					,/*lPixel*/,{|| aItemPed[nItem][14] 																},,,,,,.F.)	// Data de Entrega
TRCell():New(oPreNota,"AITEM15",/*Tabela*/,RetTitle("C6_DESCONT")	,PesqPict("SC6","C6_DESCONT")	,TamSx3("C6_DESCONT")[1]	,/*lPixel*/,{|| aItemPed[nItem][15] 																})	// % Desconto
TRCell():New(oPreNota,"AITEM16",/*Tabela*/,"Armazem"				,PesqPict("SC6","C6_LOCAL")		,TamSx3("C6_LOCAL")[1]		,/*lPixel*/,{|| aItemPed[nItem][16] 																})	// "Loc."
TRCell():New(oPreNota,"AITEM17",/*Tabela*/,'Qtd.a Fat.'				,PesqPictQt("C6_QTDLIB")		,TamSx3("C6_QTDLIB"	)[1]	,/*lPixel*/,{|| aItemPed[nItem][17] 												  				})	// "Qtd.a Fat."
TRCell():New(oPreNota,"NSALDO" ,/*Tabela*/,'Saldo'					,PesqPictQt("C6_QTDLIB")		,TamSx3("C6_QTDLIB"	)[1]	,/*lPixel*/,{|| aItemPed[nItem][07]-aItemPed[nItem][17]+aItemPed[nItem][18]-aItemPed[nItem][19]	})	// "Saldo"
TRCell():New(oPreNota,"NULTLIB",/*Tabela*/,'Ult.Fat.'				,PesqPict("SD2","D2_QUANT")		,TamSx3("D2_QUANT")[1]		,/*lPixel*/,{|| nUltLib 																			})	// "Ult.Fat." // Ajuste na Picture do Campo [Chamado: 5490]

TRFunction():New(oPreNota:Cell("AITEM07"),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,PesqPict("SC6","C6_QTDVEN",20),/*uFormula*/,.T./*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oPreNota:Cell("AITEM13"),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,.T./*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)


//==========================================================================
// Secao dos Impostos                                                     
//==========================================================================
oImpostos := TRSection():New(oReport,"Emissao da Confirmacao do Pedido",{"SC5","SC6","SD1","SB1","SD2","SA1","SA2","SA4","SE4","SA3","SX3"},;
															aOrdem/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)	// 
oImpostos:SetTotalInLine(.F.)

	TRCell():New(oImpostos,"NF_BASEICM"	,/*Tabela*/,"Base Icms"		,PesqPict("SF2","F2_BASEICM"),TamSx3("F2_BASEICM"		)[1],/*lPixel*/,{|| MaFisRet(,"NF_BASEICM") 	})	// "Base Icms"
	TRCell():New(oImpostos,"NF_VALICM"	,/*Tabela*/,"Valor Icms"	,PesqPict("SF2","F2_VALICM") ,TamSx3("F2_VALICM"		)[1],/*lPixel*/,{|| MaFisRet(,"NF_VALICM"	) 	})	// "Valor Icms"
	TRCell():New(oImpostos,"NF_BASESOL"	,/*Tabela*/,"Base Retido"	,PesqPict("SF2","F2_BRICMS") ,TamSx3("F2_BRICMS"		)[1],/*lPixel*/,{|| MaFisRet(,"NF_BASESOL") 	})	// "Base Retido"
	TRCell():New(oImpostos,"NF_VALSOL"	,/*Tabela*/,"Valor Retido"	,PesqPict("SF2","F2_ICMSRET"),TamSx3("F2_ICMSRET"		)[1],/*lPixel*/,{|| MaFisRet(,"NF_VALSOL"	) 	})	// "Valor Retido"
	TRCell():New(oImpostos,"NF_TOTAL"	,/*Tabela*/,"Valor Total"	,PesqPict("SF2","F2_VALBRUT"),TamSx3("F2_VALBRUT"	    	)[1],/*lPixel*/,{|| MaFisRet(,"NF_TOTAL"	) 	})	// "Valor Total"

//==========================================================================
// Troca descricao do total dos itens                                     
//==========================================================================
oReport:Section(1):SetTotalText("T O T A I S ")	

TRPosition():New(oPreNota,"SC6",1,{|| xFilial("SC5") + aCabPed[07]+aItemPed[nItem][01]})
TRPosition():New(oPreNota,"SC5",1,{|| xFilial("SC6") + aCabPed[07]+aItemPed[nItem][01]})

oReport:Section(2):SetEdit(.F.) 
oReport:Section(1):SetUseQuery(.F.) // Novo compomente tReport para adcionar campos de usuario no relatorio qdo utiliza query

//==========================================================================
// Alinhamento a direita as colunas de valor                              
//==========================================================================
oPreNota:Cell("AITEM07"):SetHeaderAlign("RIGHT")
oPreNota:Cell("AITEM08"):SetHeaderAlign("RIGHT")
oPreNota:Cell("NALIQICM"):SetHeaderAlign("RIGHT")

oImpostos:Cell("NF_BASEICM"):SetHeaderAlign("RIGHT")
oImpostos:Cell("NF_VALICM"):SetHeaderAlign("RIGHT")
oImpostos:Cell("NF_BASESOL"):SetHeaderAlign("RIGHT")
oImpostos:Cell("NF_VALSOL"):SetHeaderAlign("RIGHT")
oImpostos:Cell("NF_TOTAL"):SetHeaderAlign("RIGHT")

oPreNota:Cell("AITEM13"):SetHeaderAlign("RIGHT")	
oPreNota:Cell("AITEM17"):SetHeaderAlign("RIGHT")	
oPreNota:Cell("NSALDO"):SetHeaderAlign("RIGHT")	
oPreNota:Cell("NULTLIB"):SetHeaderAlign("RIGHT")
	
Return(oReport)
/*
===============================================================================================================================
Programa----------: ROMS007P
Autor-------------: Marco Bianchi
Data da Criacao---: 10/07/06 
===============================================================================================================================
Descrição---------: Impressão do relatório
===============================================================================================================================
Parametros--------: oReport,oPreNota,nItem,aItemPed,aCabPed
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMS007P(oReport,oPreNota,nItem,aItemPed,aCabPed)

Local lQuery    := .F.
Local aPedCli    := {}
Local aC5Rodape  := {}
Local aRelImp    := MaFisRelImp("MT100",{"SF2","SD2"})
Local aFisGet    := Nil
Local aFisGetSC5 := Nil
Local cAliasSC5  := "SC5"
Local cAliasSC6  := "SC6"
Local cQryAd     := ""
Local cPedido    := ""
Local cCliEnt	 := ""
Local cNfOri     := Nil
Local cSeriOri   := Nil
Local nDesconto  := 0
Local nPesLiq    := 0
Local nRecnoSD1  := Nil
Local nG		 := 0
Local nFrete	 := 0
Local nSeguro	 := 0
Local nFretAut	 := 0
Local nDespesa	 := 0
Local nDescCab	 := 0
Local nPDesCab	 := 0
Local nY         := 0
Local nValMerc   := 0
Local nPrcLista  := 0
Local nAcresFin  := 0
Local nOrdem	 := oReport:Section(1):GetOrder() 


ROMS007G(@aFisGet,@aFisGetSC5)


//==========================================================================
//Transforma parametros Range em expressao SQL                            
//==========================================================================
MakeSqlExpr(oReport:uParam)

//==========================================================================
//Filtragem do relatório                                                  
//==========================================================================

cQryAd := "%"
For nY := 1 To Len(aFisGet)
	cQryAd += ","+aFisGet[nY][2]
Next nY
For nY := 1 To Len(aFisGetSC5)
	cQryAd += ","+aFisGetSC5[nY][2]
Next nY		
cQryAd += "%"
	
cAliasSC5:= cAliasSC6:= GetNextAlias()
lQuery    := .T.
		
cFiltro :=  "%"
        
//Filtra Emissao 
if !empty(mv_par03) .and. !empty(mv_par04)
    cFiltro += " AND SC5.C5_EMISSAO BETWEEN '" + dtos(mv_par03) + "' AND '"  + dtos(mv_par04) + "' "
endif
        
//Filtra só pendentes
IF MV_PAR13 = 1
	cFiltro += " AND SC5.C5_NOTA = ' ' "
endif
   
//Filtra Vendedor
if !empty(mv_par05) 
	cFiltro += " AND SA3.A3_COD IN " + FormatIn(mv_par05,";")
endif   	

//Filtra Coordenador
if !empty(mv_par06)
	cFiltro += " AND SA3.A3_SUPER IN " + FormatIn(mv_par06,";")
endif
		
//Filtra usuario filial + matricula
if !empty(mv_par07)
	cFiltro += " AND SC5.C5_I_CDUSU = '" + mv_par07 + "' "
endif

//busca CFOPS de acordo com parametro definido por usuario	
if !empty(mv_par08)
	//Senao tiver escolhido 'A' opcao todos
	if !("A" $ mv_par08 )			 
		cCfops := U_ITCFOPS(alltrim(upper(mv_par08)))
		cFiltro += " AND SC6.C6_CF IN " + FormatIn(cCfops,";")			
	endif
endif        
		
//Filtra data de Entrega
if !empty(mv_par09) .and. !empty(mv_par10)
     cFiltro += " AND SC5.C5_I_DTENT BETWEEN '" + dtos(mv_par09) + "' AND '"  + dtos(mv_par10) + "' "
endif
        
//Filtra grupo de produtos
if !empty(mv_par11)
	cFiltro += " AND SB1.B1_GRUPO IN " + FormatIn(mv_par11,";")
endif

//Filtra armazéns
if !empty(mv_par14)
	cFiltro += " AND SC6.C6_LOCAL IN " + FormatIn(mv_par14,";")
endif

//Filtra pedidos
If funname() == "AOMS109"  //Relatório chamado a partir da tela de central de logistica

	DBSelectArea("TRBF")
	TRBF->( DBGoTop() )
	
	//================================================================================
	// Armazena todos os pedidos selecionados pelo usuario
	//================================================================================
	_cNumPed := ""
	While TRBF->(!EOF())
	
		//================================================================================
		// Somente pedidos selecionados pelo usuario
		//================================================================================
		If IsMark( "TRBF_OK" , cMarkado )
		     
	    	_cNumPed	+= "'"+ TRBF_NUM +"',"
			
		EndIf
		
     	TRBF->( DBSkip() )
	EndDo
	
	If !empty(_cnumped)
		
		cFiltro += " AND SC5.C5_NUM IN (" + SubStr(_cNumPed,1,Len(_cNumPed) - 1) + ") "
	
	Else
		
		cFiltro += " AND SC5.C5_NUM = 'ZZ!!' "  //para não trazer nenhum pedido
		
	Endif

Elseif !empty(mv_par02)

	cFiltro += " AND SC5.C5_NUM >= '" + mv_par01 + "' "
	cFiltro += " AND SC5.C5_NUM <= '" + mv_par02 + "' "
	
Endif



IF nOrdem = 1 
	cFiltro += " ORDER BY SC5.C5_I_CEP,SC5.C5_NUM,SC6.C6_ITEM "
ELSE
	cFiltro += " ORDER BY SC5.C5_NUM,SC6.C6_ITEM "
ENDIF

cFiltro += "%"

oReport:Section(1):BeginQuery()
		
BeginSql Alias cAliasSC5
		
		SELECT SC5.R_E_C_N_O_ SC5REC,SC6.R_E_C_N_O_ SC6REC,
		SC5.C5_FILIAL,SC5.C5_NUM,SC5.C5_CLIENTE,SC5.C5_LOJACLI,SC5.C5_TIPO,
		SC5.C5_TIPOCLI,SC5.C5_TRANSP,SC5.C5_PBRUTO,SC5.C5_PESOL,SC5.C5_DESC1,
		SC5.C5_DESC2,SC5.C5_DESC3,SC5.C5_DESC4,SC5.C5_MENNOTA,SC5.C5_NOTA,SC5.C5_SERIE,SC5.C5_EMISSAO,
		SC5.C5_CONDPAG,SC5.C5_FRETE,SC5.C5_DESPESA,SC5.C5_FRETAUT,SC5.C5_TPFRETE,SC5.C5_SEGURO,SC5.C5_TABELA,
		SC5.C5_VOLUME1,SC5.C5_ESPECI1,SC5.C5_MOEDA,SC5.C5_REAJUST,SC5.C5_BANCO,
		SC5.C5_ACRSFIN,SC5.C5_VEND1,SC5.C5_VEND2,SC5.C5_VEND3,SC5.C5_VEND4,SC5.C5_VEND5,
		SC5.C5_COMIS1,SC5.C5_COMIS2,SC5.C5_COMIS3,SC5.C5_COMIS4,SC5.C5_COMIS5,SC5.C5_PDESCAB,SC5.C5_DESCONT,C5_INCISS,
		SC5.C5_CLIENT,SC5.C5_I_DTENT, SC5.C5_I_TIPCA, SC5.C5_I_CHAPA, SC5.C5_I_HORDE, SC5.C5_I_SENHA, SC5.C5_I_CUSDE, SC5.C5_MENNOTA, //Talita - 20/09/13 - Incluido a dt de entrega, tipo de carga, quant chapa, hr da descarga, senha, custo conforme solicitado no chamado: 4278
		SC6.C6_FILIAL,SC6.C6_NUM,SC6.C6_PEDCLI,SC6.C6_PRODUTO,
		SC6.C6_TES,SC6.C6_CF,SC6.C6_QTDVEN,SC6.C6_PRUNIT,SC6.C6_VALDESC,
		SC6.C6_VALOR,SC6.C6_ITEM,SC6.C6_DESCRI,SC6.C6_UM,
		SC6.C6_PRCVEN,SC6.C6_NOTA,SC6.C6_SERIE,SC6.C6_CLI,
		SC6.C6_LOJA,SC6.C6_ENTREG,SC6.C6_DESCONT,SC6.C6_LOCAL,
		SC6.C6_QTDEMP,SC6.C6_QTDLIB,SC6.C6_QTDENT,SC6.C6_NFORI,SC6.C6_SERIORI,SC6.C6_ITEMORI,
		SC6.C6_SEGUM,SC6.C6_UNSVEN,SC5.C5_I_CDUSU,C5_I_CEP , A1_I_HORP, C5_I_OBPED
		%Exp:cQryAd%
		FROM %Table:SC5% SC5, %Table:SC6% SC6,%table:SA3% SA3, %table:SB1% SB1, %table:SA1% SA1
		WHERE
	   	SC5.C5_FILIAL = %xFilial:SC5% AND
		SC5.%notdel% 
		AND	SC6.C6_FILIAL = SC5.C5_FILIAL AND
		SC6.C6_NUM   = SC5.C5_NUM AND
		SC6.%notdel%
		AND SC5.C5_VEND1 = SA3.A3_COD
		AND SA3.%notdel% 
		AND	SB1.B1_FILIAL = %xFilial:SB1%
		AND SB1.B1_COD = SC6.C6_PRODUTO
		AND SB1.%notDel%
		AND	SA1.A1_FILIAL = %xFilial:SA1%
		AND SA1.A1_COD = SC5.C5_CLIENT        
		AND SA1.A1_LOJA = SC5.C5_LOJACLI
		AND SA1.%notDel%
		
		%Exp:cFiltro%

EndSql

oReport:section(1):endQuery()

DBSelectArea(cAliasSC5)

COUNT TO _nTotReg

oReport:SetMeter(_nTotReg)	

(cAliasSC5)->( DBGoTop())

//==========================================================================
//Inicio da impressao do fluxo do relatório                               
//==========================================================================
_cultped := " "

While !oReport:Cancel() .And. !((cAliasSC5)->(Eof()))  

	oReport:IncMeter()
	
	//================================================================
	// Executa a validacao dos filtros do usuario           	     
	//================================================================
	dbSelectArea(cAliasSC5)                                            
	     
	//================================================================
	// Filtro por carga 
	//================================================================
	If !Empty(MV_PAR12)
	
		_cCodCarga:= ROMS007A((cAliasSC5)->C5_FILIAL,(cAliasSC5)->C5_NUM)
		
		If !(MV_PAR12 $ _cCodCarga) 
		
			dbSelectArea(cAliasSC5)
			(cAliasSC5)->(dbSkip())
			Loop
		
		EndIf
	
	EndIf	
	
	cCliEnt := IIf(!Empty((cAliasSC5)->(FieldGet(FieldPos("C5_CLIENT")))),(cAliasSC5)->C5_CLIENT,(cAliasSC5)->C5_CLIENTE)
	aCabPed := {}

	MaFisIni(cCliEnt,;						// 1-Codigo Cliente/Fornecedor
		(cAliasSC5)->C5_LOJACLI,;			// 2-Loja do Cliente/Fornecedor
		If((cAliasSC5)->C5_TIPO$'DB',"F","C"),;	// 3-C:Cliente , F:Fornecedor
		(cAliasSC5)->C5_TIPO,;				// 4-Tipo da NF
		(cAliasSC5)->C5_TIPOCLI,;			// 5-Tipo do Cliente/Fornecedor
		aRelImp,;							// 6-Relacao de Impostos que suportados no arquivo
		,;						   			// 7-Tipo de complemento
		,;									// 8-Permite Incluir Impostos no Rodape .T./.F.
		"SB1",;								// 9-Alias do Cadastro de Produtos - ("SBI" P/ Front Loja)
		"MATA461")							// 10-Nome da rotina que esta utilizando a funcao

	nFrete		:= (cAliasSC5)->C5_FRETE
	nSeguro		:= (cAliasSC5)->C5_SEGURO
	nFretAut	:= (cAliasSC5)->C5_FRETAUT
	nDespesa	:= (cAliasSC5)->C5_DESPESA
	nDescCab	:= (cAliasSC5)->C5_DESCONT
	nPDesCab	:= (cAliasSC5)->C5_PDESCAB

	aItemPed:= {}
	aCabPed := {	(cAliasSC5)->C5_TIPO	,;    	//1
		(cAliasSC5)->C5_CLIENTE				,;    	//2
		(cAliasSC5)->C5_LOJACLI				,;    	//3
		(cAliasSC5)->C5_TRANSP				,;	  	//4
		(cAliasSC5)->C5_CONDPAG				,;	  	//5
		(cAliasSC5)->C5_EMISSAO				,;		//6
		(cAliasSC5)->C5_NUM					,;		//7
		(cAliasSC5)->C5_VEND1				,;		//8
		(cAliasSC5)->C5_VEND2				,;		//9
		(cAliasSC5)->C5_VEND3				,;		//10
		(cAliasSC5)->C5_VEND4				,;     	//11
		(cAliasSC5)->C5_VEND5				,;		//12
		(cAliasSC5)->C5_COMIS1				,;     	//13
		(cAliasSC5)->C5_COMIS2				,;		//14
		(cAliasSC5)->C5_COMIS3				,;		//15
		(cAliasSC5)->C5_COMIS4				,;		//16
		(cAliasSC5)->C5_COMIS5				,;		//17
		(cAliasSC5)->C5_FRETE				,;		//18
		(cAliasSC5)->C5_TPFRETE				,;		//19
		(cAliasSC5)->C5_SEGURO				,;		//20
		(cAliasSC5)->C5_TABELA				,;		//21
		(cAliasSC5)->C5_VOLUME1				,;		//22
		(cAliasSC5)->C5_ESPECI1				,;		//23
		(cAliasSC5)->C5_MOEDA				,;		//24
		(cAliasSC5)->C5_REAJUST				,;		//25
		(cAliasSC5)->C5_BANCO				,;		//26
		(cAliasSC5)->C5_ACRSFIN				,;		//27
		(cAliasSC5)->C5_NOTA				,; // by Abrahao em 20/08/09  //28
		(cAliasSC5)->C5_SERIE				 ,; // by Abrahao em 20/08/09  //29
		(cAliasSC5)->C5_I_CDUSU				 ,; // Jeovane 09/11/2009    //30
		(cAliasSC5)->C5_DESCONT				 ,;	//05/07/2013 - Talita - Inclusão do campo desconto no relatorio. Conforme chamado 3649	//31
		(cAliasSC5)->C5_I_DTENT				 ,;    	//32   //Inicio da Alteração -  Talita - 20/09/13 - Incluido a dt de entrega, tipo de carga, quant chapa, hr da descarga, senha, custo conforme solicitado no chamado: 4278                                                                                   
		(cAliasSC5)->C5_I_TIPCA				 ,;		//33
		(cAliasSC5)->C5_I_CHAPA				 ,;		//34
		(cAliasSC5)->C5_I_HORDE				 ,;		//35
		(cAliasSC5)->C5_I_SENHA				 ,;		//36
		(cAliasSC5)->C5_I_CUSDE				 ,;		//37
		(cAliasSC5)->C5_MENNOTA				 ,;		//38 // Fim da alteração chamado 4278   
		(cAliasSC5)->A1_I_HORP               ,;     //39
	    (cAliasSC5)->C5_I_OBPED              ,;     //40
		}
	nPesBru	:= 0
	nPesLiq	:= 0
	aPedCli	:= {}
	If !lQuery
		dbSelectArea(cAliasSC6)
		dbSetOrder(1)
		dbSeek(xFilial("SC6")+(cAliasSC5)->C5_NUM)
	EndIf
	cPedido    := (cAliasSC5)->C5_NUM
	aC5Rodape  := {}
	
	cMensNF:=(cAliasSC5)->C5_MENNOTA
	
	if !empty(alltrim((cAliasSC5)->C5_NOTA))
		DbSelectarea("SF2")
		DbSetOrder(1)
		if DbSeek(xfilial("SF2")+(cAliasSC5)->C5_NOTA+(cAliasSC5)->C5_SERIE+(cAliasSC5)->C5_CLIENTE+(cAliasSC5)->C5_LOJACLI)
			cMensNF:=SF2->F2_I_MENSA
		Endif
	Endif

	aadd(aC5Rodape,{(cAliasSC5)->C5_PBRUTO,(cAliasSC5)->C5_PESOL,(cAliasSC5)->C5_DESC1,(cAliasSC5)->C5_DESC2,;
		(cAliasSC5)->C5_DESC3,(cAliasSC5)->C5_DESC4,cMensNF,(cAliasSC5)->C5_I_OBPED, (cAliasSC5)->A1_I_HORP})

	aPedCli := ROMS007L(cPedido)

	dbSelectArea(cAliasSC5)
	For nY := 1 to Len(aFisGetSC5)
		If !Empty(&(aFisGetSC5[ny][2]))
			If aFisGetSC5[ny][1] == "NF_SUFRAMA"
				MaFisAlt(aFisGetSC5[ny][1],Iif(&(aFisGetSC5[ny][2]) == "1",.T.,.F.),Len(aItemPed),.T.)		
			Else
				MaFisAlt(aFisGetSC5[ny][1],&(aFisGetSC5[ny][2]),Len(aItemPed),.T.)
			Endif	
		EndIf
	Next nY

	While !oReport:Cancel() .And. !((cAliasSC6)->(Eof())) .And. xFilial("SC6")==(cAliasSC6)->C6_FILIAL .And.;
			(cAliasSC6)->C6_NUM == cPedido


		cNfOri     := Nil
		cSeriOri   := Nil
		nRecnoSD1  := Nil
		nDesconto  := 0

		If !Empty((cAliasSC6)->C6_NFORI)
			dbSelectArea("SD1")
			dbSetOrder(1)
			dbSeek(xFilial("SC6")+(cAliasSC6)->C6_NFORI+(cAliasSC6)->C6_SERIORI+(cAliasSC6)->C6_CLI+(cAliasSC6)->C6_LOJA+;
				(cAliasSC6)->C6_PRODUTO+(cAliasSC6)->C6_ITEMORI)
			cNfOri     := (cAliasSC6)->C6_NFORI
			cSeriOri   := (cAliasSC6)->C6_SERIORI
			nRecnoSD1  := SD1->(RECNO())
		EndIf
		dbSelectArea(cAliasSC6)

		//===============================================
		//Calcula o preco de lista                     
		//===============================================
		nValMerc  := (cAliasSC6)->C6_VALOR
		nPrcLista := (cAliasSC6)->C6_PRUNIT
		If ( nPrcLista == 0 )
			nPrcLista := NoRound(nValMerc/(cAliasSC6)->C6_QTDVEN,TamSX3("C6_PRCVEN")[2])
		EndIf
		nAcresFin := A410Arred((cAliasSC6)->C6_PRCVEN*(cAliasSC5)->C5_ACRSFIN/100,"D2_PRCVEN")
		nValMerc  += A410Arred((cAliasSC6)->C6_QTDVEN*nAcresFin,"D2_TOTAL")		
		nDesconto := a410Arred(nPrcLista*(cAliasSC6)->C6_QTDVEN,"D2_DESCON")-nValMerc
		nDesconto := IIf(nDesconto==0,(cAliasSC6)->C6_VALDESC,nDesconto)
		nDesconto := Max(0,nDesconto)
		nPrcLista += nAcresFin
		If cPaisLoc=="BRA"
			nValMerc  += nDesconto
		EndIf			
		
		MaFisAdd((cAliasSC6)->C6_PRODUTO	,;	// 1-Codigo do Produto ( Obrigatorio )
			(cAliasSC6)->C6_TES				,;	// 2-Codigo do TES ( Opcional )
			(cAliasSC6)->C6_QTDVEN			,;	// 3-Quantidade ( Obrigatorio )
			nPrcLista						,;	// 4-Preco Unitario ( Obrigatorio )
			nDesconto						,;	// 5-Valor do Desconto ( Opcional )
			cNfOri							,;	// 6-Numero da NF Original ( Devolucao/Benef )
			cSeriOri						,;	// 7-Serie da NF Original ( Devolucao/Benef )
			nRecnoSD1						,;	// 8-RecNo da NF Original no arq SD1/SD2
			0								,;	// 9-Valor do Frete do Item ( Opcional )
			0								,;	// 10-Valor da Despesa do item ( Opcional )
			0								,;	// 11-Valor do Seguro do item ( Opcional )
			0								,;	// 12-Valor do Frete Autonomo ( Opcional )
			nValMerc						,;	// 13-Valor da Mercadoria ( Obrigatorio )
			0								,;	// 14-Valor da Embalagem ( Opiconal )
			0								,;	// 15-RecNo do SB1
			0								)	// 16-RecNo do SF4
	
		aadd(aItemPed,	{	(cAliasSC6)->C6_ITEM	,;
			(cAliasSC6)->C6_PRODUTO					,;
			(cAliasSC6)->C6_DESCRI					,;
			(cAliasSC6)->C6_TES						,;
			(cAliasSC6)->C6_CF						,;
			(cAliasSC6)->C6_UM						,;
			(cAliasSC6)->C6_QTDVEN					,;
			(cAliasSC6)->C6_PRCVEN					,;
			(cAliasSC6)->C6_NOTA					,;
			(cAliasSC6)->C6_SERIE					,;
			(cAliasSC6)->C6_CLI						,;
			(cAliasSC6)->C6_LOJA					,;
			(cAliasSC6)->C6_VALOR					,;
			(cAliasSC6)->C6_ENTREG					,;
			(cAliasSC6)->C6_DESCONT					,;
			(cAliasSC6)->C6_LOCAL					,;
			(cAliasSC6)->C6_QTDEMP					,;
			(cAliasSC6)->C6_QTDLIB					,;
			(cAliasSC6)->C6_QTDENT					,;
			(cAliasSC6)->C6_SEGUM					,;
			(cAliasSC6)->C6_UNSVEN					,;				
			})							
			
		//=========================================================================
		//Forca os valores de impostos que foram informados no SC6.              
		//=========================================================================
		dbSelectArea(cAliasSC6)
		For nY := 1 to Len(aFisGet)
			If !Empty(&(aFisGet[ny][2]))
				MaFisAlt(aFisGet[ny][1],&(aFisGet[ny][2]),Len(aItemPed))
			EndIf
		Next nY

		//===============================================
		//Calculo do ISS                               
		//===============================================
		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+(cAliasSC6)->C6_TES))
		If ( (cAliasSC5)->C5_INCISS == "N" .And. (cAliasSC5)->C5_TIPO == "N")
			If ( SF4->F4_ISS=="S" )
				nPrcLista := a410Arred(nPrcLista/(1-(MaAliqISS(Len(aItemPed))/100)),"D2_PRCVEN")
				nValMerc  := a410Arred(nValMerc/(1-(MaAliqISS(Len(aItemPed))/100)),"D2_PRCVEN")
				MaFisAlt("IT_PRCUNI",nPrcLista,Len(aItemPed))
				MaFisAlt("IT_VALMERC",nValMerc,Len(aItemPed))
			EndIf
		EndIf	
		
		//===============================================
		//Altera peso para calcular frete              
		//===============================================
		SB1->(dbSetOrder(1))
		SB1->(MsSeek(xFilial("SB1")+(cAliasSC6)->C6_PRODUTO))			
		MaFisAlt("IT_PESO",(cAliasSC6)->C6_QTDVEN*SB1->B1_PESO,Len(aItemPed))
		MaFisAlt("IT_PRCUNI",nPrcLista,Len(aItemPed))
		MaFisAlt("IT_VALMERC",nValMerc,Len(aItemPed))
			
		If !lQuery
			dbSelectArea(cAliasSC6)
		EndIf

		(cAliasSC6)->(dbSkip())
	EndDo
	MaFisAlt("NF_FRETE"   ,nFrete)
	MaFisAlt("NF_SEGURO"  ,nSeguro)
	MaFisAlt("NF_AUTONOMO",nFretAut)
	MaFisAlt("NF_DESPESA" ,nDespesa)

	If nDescCab > 0
		MaFisAlt("NF_DESCONTO",Min(MaFisRet(,"NF_VALMERC")-0.01,nDescCab+MaFisRet(,"NF_DESCONTO")))
	EndIf
	If nPDesCab > 0
		MaFisAlt("NF_DESCONTO",A410Arred(MaFisRet(,"NF_VALMERC")*nPDesCab/100,"C6_VALOR")+MaFisRet(,"NF_DESCONTO"))
	EndIf

	ROMS007C4(aPedCli,oReport,aCabPed)

	oReport:Section(1):Init()
	nItem := 0
	For nG := 1 To Len(aItemPed)
		nItem += 1
		If oReport:Row() > 1500
			oReport:Section(1):Finish()
			ROMS0074R(nPesLiq,nPesBru,aC5Rodape,.F.,oReport)
			oReport:EndPage(.T.)
			oReport:Section(1):Init()
		 	ROMS007C4(aPedCli,oReport,aCabPed)
		Endif
		ROMD007I4(nItem,@nPesLiq,@nPesBru,oReport,oPreNota,aCabPed,aItemPed)
	Next
	oReport:Section(1):Finish()
	ROMS0074R(nPesLiq,nPesBru,aC5Rodape,.T.,oReport)
	oReport:EndPage(.T.)		// Finaliza pagina de impressao (zeras as linhas e colunas)

	MaFisEnd()

	If !lQuery
		dbSelectArea(cAliasSC5)
		dbSkip()
	Endif

EndDo

Return

/*
===============================================================================================================================
Programa----------: ROMS007C4
Autor-------------: Marco Bianchi
Data da Criacao---: 11/07/06 
===============================================================================================================================
Descrição---------: Impressao do cabecalho  
===============================================================================================================================
Parametros--------: aPedCli,oReport,aCabPed
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMS007C4(aPedCli,oReport,aCabPed)

Local nPed		:= 0
Local i         := 0
Local cMoeda	:= ""
Local cPedCli   := ""
Local cPictCgc  := ""
Local oBox
Local nPrinLin  := 0
Local nInicio   := 20

Local _cCodCarga := ""
Local _cTpCarga  := ""

//  array acabped                                              
//  -------------                                              
//  01 C5_TIPO           10 C5_VEND3     	19 C5_TPFRETE       
//  02 C5_CLIENTE        11 C5_VEND4     	20 C5_SEGURO        
//  03 C5_LOJACLI        12 C5_VEND5     	21 C5_TABELA        
//  04 C5_TRANSP         13 C5_COMIS1    	22 C5_VOLUME1       
//  05 C5_CONDPAG        14 C5_COMIS2    	23 C5_ESPECI1       
//  06 C5_EMISSAO        15 C5_COMIS3    	24 C5_MOEDA         
//  07 C5_NUM            16 C5_COMIS4    	25 C5_REAJUST       
//  08 C5_VEND1          17 C5_COMIS5    	26 C5_BANCO         
//  09 C5_VEND2          18 C5_FRETE     	27 C5_ACRSFIN  
     
// Posiciona registro no cliente do pedido                     
IF !(aCabPed[1]$"DB")   //C5_TIPO
	dbSelectArea("SA1")
	dbSeek(xFilial("SA1")+aCabped[2]+aCabped[3])  //C5_CLIENTE + C5_LOJACLI
	cPictCgc := PesqPict("SA1","A1_CGC")	
Else
	dbSelectArea("SA2")
	dbSeek(xFilial("SA2")+aCabPed[2]+aCabPed[3])  // C5_CLIENTE + C5_LOJACLI
	cPictCgc := PesqPict("SA2","A2_CGC")	
Endif

dbSelectArea("SA4")
dbSetOrder(1)
dbSeek(xFilial("SA4")+aCabPed[4])	   				// C5_TRANSP
dbSelectArea("SE4")
dbSetOrder(1)
dbSeek(xFilial("SE4")+aCabPed[5])	  				// C5_CONDPAG
aSort(aPedCli)

//===============================================================
// Inicializa impressao do cabecalho                           
//===============================================================
oReport:HideHeader()			// Nao imprime cabecalho padrao do Protheus
oReport:SkipLine()

//===============================================================
// Desenha as caixas do cabecalho                              
//===============================================================
oReport:Box(20,10,200,750,oBox)
oReport:Box(20,750,200,1800,oBox)
oReport:Box(20,1800,200,3000,oBox)
oReport:Box(20,2550,200,3000,oBox)

IF !(aCabPed[1]$"DB")		//C5_TIPO
   nPrinLin := nInicio
	//===============================================================
	// Informacoes do Quadro 1: Dados da Empresa                   
	//===============================================================
	oReport:PrintText("",nPrinLin,10)
	oReport:PrintText(SM0->M0_NOME,nPrinLin,20)
	nPrinLin += 30
	oReport:PrintText(SM0->M0_ENDCOB,nPrinLin,20)
	nPrinLin += 30
	oReport:PrintText("TEL: "+SM0->M0_TEL,nPrinLin,20)	
	nPrinLin += 30
	oReport:PrintText(Iif(cPaisLoc=="BRA","CGC: ",Alltrim(Posicione('SX3',2,'A1_CGC','SX3->X3_TITULO'))+":")+;	
						Transform(SM0->M0_CGC,cPictCgc)+ " " +Subs(SM0->M0_CIDCOB,1,15),nPrinLin,20)
	
	//===============================================================
	// Informacoes do Quadro 2: Dados do Cliente                   
	//===============================================================
    nPrinLin := nInicio
	oReport:PrintText(SA1->A1_COD+"/"+SA1->A1_LOJA+" "+SA1->A1_NOME,nPrinLin,760)	
	nPrinLin += 30
	oReport:PrintText(IF( !Empty(SA1->A1_ENDENT) .And. SA1->A1_ENDENT # SA1->A1_END,SA1->A1_ENDENT, SA1->A1_END ),nPrinLin,760)
	nPrinLin += 30
	oReport:PrintText(IF( !Empty(SA1->A1_CEPE) .And. SA1->A1_CEPE # SA1->A1_CEP,AllTrim(SA1->A1_CEPE), AllTrim(SA1->A1_CEP) )+" "+;
						IF( !Empty(SA1->A1_MUNE) .And. SA1->A1_MUNE # SA1->A1_MUN,AllTrim(SA1->A1_MUNE),AllTrim(SA1->A1_MUN) )+" "+;
						IF( !Empty(SA1->A1_ESTE) .And. SA1->A1_ESTE # SA1->A1_EST,AllTrim(SA1->A1_ESTE),AllTrim(SA1->A1_EST) ),nPrinLin,760)
	nPrinLin += 30
	oReport:PrintText(subs(transform(SA1->A1_CGC,PicPesFJ(RetPessoa(SA1->A1_CGC))),1,at("%",transform(SA1->A1_CGC,PicPes(RetPessoa(SA1->A1_CGC))))-1),nPrinLin,760)
	If cPaisLoc == "BRA"	
		oReport:PrintText("IE: "+SA1->A1_INSCR,nPrinLin,1050)		
	Endif                 
	nPrinLin += 30
	oReport:PrintText("Bairro: "   + SA1->A1_BAIRRO,nPrinLin,760)		
	nPrinLin += 30
	oReport:PrintText("Telefone: (" + SA1->A1_DDD + ") " + SubStr(SA1->A1_TEL,1,4) +'-'+SubStr(SA1->A1_TEL,5,4),nPrinLin,760)		//TELEFONE
	
	//===============================================================
	// Informacoes do Quadro 3: Dados do Pedido                    
	//===============================================================
    nPrinLin := nInicio
	oReport:PrintText("CONFIRMACAO DO PEDIDO",nPrinLin,1810)							
	nPrinLin += 60
	oReport:PrintText("EMISSAO: "+DTOC(aCabPed[6]),nPrinLin,1810)		    
	
	nPrinLin += 30
	oReport:PrintText("PEDIDO N. " +aCabPed[7],nPrinLin,1810)			         

	_cCodCarga:= Posicione("DAI",4,xFilial("DAI")+ aCabPed[7],"DAI_COD")
	If Len(AllTrim(_cCodCarga)) > 0                        
	    
		_cTpCarga:=Posicione("DAK",1,xFilial("DAK") + _cCodCarga,"DAK_I_TPCA") 
				
		If Len(AllTrim(_cTpCarga)) > 0
		
			_cTpCarga:= AllTrim(_aTpCarga[val(_cTpCarga)])     
			_cTpCarga:= SubStr(_cTpCarga,AT("=",_cTpCarga)+2,Len(SubStr(_cTpCarga,AT("=",_cTpCarga)+2,Len(_cTpCarga)-1))-1)
			
				Else
					_cTpCarga:= ""
		EndIf
		
		nPrinLin += 30
		oReport:PrintText("Carga:" + _cCodCarga + " Tipo da Carga:" + _cTpCarga,nPrinLin,1810)	
	EndIf
	
	oReport:PrintText("USUÁRIO: "+Posicione("SRA",1,aCabPed[30],"RA_NOME"),nPrinLin+30,1810)			// "Usuario "
	
	//===============================================================
	// Informacoes do Quadro 4: Dados da Nota Fiscal               
	//===============================================================
		
	nPrinLin := nInicio
	oReport:PrintText("DADOS DA NOTA FISCAL",nPrinLin,2560)							// "CONFIRMACAO DO PEDIDO"
	nPrinLin += 60	
	
	if !Empty(alltrim(aCabPed[28]))
		oReport:PrintText("EMISSÃO N.F.: " + DtoC(Posicione("SF2",1,xFilial("SF2") + aCabPed[28] + aCabPed[29] + aCabPed[2] + aCabPed[3],"SF2->F2_EMISSAO")),nPrinLin,2560)
	Endif   
	
	nPrinLin += 30
	if !Empty(alltrim(aCabPed[28]))
		oReport:PrintText("Nota:"+aCabPed[28]+" Serie:"+aCabPed[29],nPrinLin,2560)
	Endif 
		
Else

	//===============================================================
	// Informacoes do Quadro 1: Dados da Empresa                   
	//===============================================================
   nPrinLin := nInicio
   
	oReport:PrintText(SM0->M0_NOME,nPrinLin,20)
	nPrinLin += 30
	oReport:PrintText(SM0->M0_ENDCOB,nPrinLin,20)
	nPrinLin += 30
	oReport:PrintText("TEL: "+SM0->M0_TEL,nPrinLin,20)														
	nPrinLin += 30
	oReport:PrintText(Iif(cPaisLoc=="BRA","CGC: ",Alltrim(Posicione('SX3',2,'A1_CGC','SX3->X3_TITULO'))+":")+;	
						Transform(SM0->M0_CGC,cPictCgc)+ " " +Subs(SM0->M0_CIDCOB,1,15),nPrinLin,20)
	
	//===============================================================
	// Informacoes do Quadro 2: Dados do Cliente                   
	//===============================================================
	nPrinLin := nInicio
	oReport:PrintText(SA2->A2_COD+"/"+SA2->A2_LOJA+" "+SA2->A2_NOME,nPrinLin,760)	
	nPrinLin += 30
	oReport:PrintText(SA2->A2_END,nPrinLin,760)
	nPrinLin += 30
	oReport:PrintText(AllTrim(SA2->A2_CEP) + " " + AllTrim(SA2->A2_MUN) + " " + AllTrim(SA2->A2_EST),nPrinLin,760)
	nPrinLin += 30
	oReport:PrintText(subs(transform(SA2->A2_CGC,PicPesFJ(RetPessoa(SA2->A2_CGC))),1,at("%",transform(SA2->A2_CGC,PicPes(RetPessoa(SA2->A2_CGC))))-1),nPrinLin,760)
	nPrinLin += 30
	If cPaisLoc == "BRA"	
		oReport:PrintText("IE: "+SA2->A2_INSCR,nPrinLin,1050)		
	Endif                                               
	nPrinLin += 30
	oReport:PrintText("Bairro: "   + SA1->A1_BAIRRO,nPrinLin,760)		// BAIRRO
	nPrinLin += 30
	oReport:PrintText("Telefone: (" + SA1->A1_DDD + ") " + SubStr(SA1->A1_TEL,1,4) +'-'+SubStr(SA1->A1_TEL,5,4),nPrinLin,760)		//TELEFONE
	
	//===============================================================
	// Informacoes do Quadro 3: Dados do Pedido                    
	//===============================================================
	nPrinLin := nInicio
	oReport:PrintText("CONFIRMACAO DO PEDIDO",nPrinLin,1810)							
	nPrinLin += 60
	oReport:PrintText("EMISSAO: "+DTOC(aCabPed[6]),nPrinLin,1810)		    
	
	if !Empty(alltrim(aCabPed[28]))
		oReport:PrintText("EMISSÃO N.F.: " + DtoC(Posicione("SF2",1,xFilial("SF2") + aCabPed[28] + aCabPed[29] + aCabPed[2] + aCabPed[3],"SF2->F2_EMISSAO")),nPrinLin,2200)
	Endif        
	
	nPrinLin += 30
	oReport:PrintText("PEDIDO N. "+aCabPed[7],nPrinLin,1810)		
	oReport:PrintText("USUÁRIO: "+Posicione("SRA",1,aCabPed[30],"RA_NOME"),nPrinLin+30,1810)			
	
	if !Empty(alltrim(aCabPed[28]))
		oReport:PrintText("Nota:"+aCabPed[28]+" Serie:"+aCabPed[29]+ " Carga:"+Posicione("DAI",4,xFilial("DAI")+ aCabPed[7],"DAI_COD"),nPrinLin,2200)
	Endif

Endif 

//===============================================================
// Pedidos do Cliente                                          
//===============================================================
oReport:SkipLine(6)
If Len(aPedCli) > 0
	oReport:PrintText("PEDIDO(S) DO CLIENTE: ",oReport:Row(),20)
	cPedCli:=""
	For nPed := 1 To Len(aPedCli)
		cPedCli += aPedCli[nPed]+Space(02)
		If Len(cPedCli) > 100 .or. nPed == Len(aPedCli)
			oReport:PrintText(cPedCli,oReport:Row(),350)
			cPedCli:=""
 		   oReport:SkipLine(2)
		Endif
	Next
	oReport:Line(oReport:Row(),10,oReport:Row()+5,3000)
Endif

//===============================================================
// Transportadora                                              
//===============================================================
oReport:SkipLine()
cCarga  := Posicione("DAI",4,xFilial("DAI")+ aCabPed[7],"DAI_COD")
cSeqCa  := Posicione("DAI",4,xFilial("DAI")+ aCabPed[7],"DAI_SEQCAR") 
cCodMot := Posicione("DAK",1,xFilial("DAK")+ cCarga+cSeqCa,"DAK_MOTORI")
cCodVei := Posicione("DAk",1,xFilial("DAK")+ cCarga+cSeqCa,"DAK_CAMINH")
cPlaca  := Posicione("DA3",1,xFilial("DA3")+cCodVei,"DA3_PLACA")
oReport:PrintText("MOTORISTA: "+ cCodMot + " - " + Posicione("DA4",1,xFilial("DA4")+cCodMot,"DA4_NOME") ,oReport:Row(),20)
oReport:PrintText("PLACA: "+ cPlaca,oReport:Row(),1000)   

//===============================================================
// Vendedores                                                  
//===============================================================
oReport:SkipLine()
For i := 8 to 12
	dbSelectArea("SA3")
	dbSetOrder(1)
	If dbSeek(xFilial("SA3")+aCabPed[i])														// C5_VENDi
		If i == 8
			oReport:PrintText("VENDEDOR.: ",oReport:Row(),20)										
			oReport:PrintText("COMISSAO: ",oReport:Row(),1000)										
		EndIf
		oReport:PrintText(aCabPed[i] + " - "+SA3->A3_NOME,oReport:Row(),300)
		oReport:PrintText(Transform(aCabPed[i+5],"99.99"),oReport:Row(),1150)
		oReport:SkipLine()
	EndIf	
Next

//===============================================================
// Condicao de Pagto, Frete e Seguro                           
//===============================================================
oReport:PrintText("COND.PGTO: "+aCabPed[5]+" - "+SE4->E4_DESCRI,oReport:Row(),20)							//C5_CONDPAG
oReport:PrintText("FRETE...: ",oReport:Row(),1000)													 
oReport:PrintText(Transform(aCabPed[18],"@EZ 999,999,999.99"),oReport:Row(),1010)				// C5_FRETE
oReport:PrintText(IIF(aCabPed[19]="C","(CIF)","(FOB)"),oReport:Row(),1200)					// C5_TPFRETE 
oReport:PrintText("Vlr.Desconto: ",oReport:Row(),1350)
oReport:PrintText(Transform(aCabPed[31],"@EZ 999,999,999.99"),oReport:Row(),1445)
oReport:PrintText("SEGURO: ",oReport:Row(),2000)													
oReport:PrintText(Transform(aCabPed[20],"@EZ 999,999,999.99"),oReport:Row(),2050)				// C5_SEGURO
oReport:SkipLine()


//===============================================================
// Tabela, Volume e Especie                                    
//===============================================================
oReport:PrintText("TABELA...: "+aCabPed[21],oReport:Row(),20)											// C5_TABELA
oReport:PrintText("VOLUMES.: "	+Transform(aCabPed[22],"@EZ 999,999"),oReport:Row(),1000)					// C5_VOLUME1s
oReport:PrintText("ESPECIE: "+aCabPed[23],oReport:Row(),2000) 												// C5_ESPECIE1
oReport:SkipLine()

//===============================================================
// Reajuste, Moeda, Banco e Acrescimo Financeiro               
//===============================================================
cMoeda:=Strzero(aCabPed[24],1,0)																// C5_MOEDA
oReport:PrintText("REAJUSTE.: "+aCabPed[25]+"   Moeda : " +IIF(cMoeda < "2","1",cMoeda),oReport:Row(),20)		//C5_REAJUST
oReport:PrintText("BANCO: " + aCabPed[26],oReport:Row(),1000)				   					// 		//C5_BANCO
oReport:PrintText("ACRES.FIN.: " + Str(aCabPed[27],6,2),oReport:Row(),2000)							// 	//C5_ACRSFIN
oReport:SkipLine()


//============================================================================================================================
// Data de Entrega, Tipo de Carga, Chapa, Hora de Descarga, Senha de Descarga, Custo de Descarga, Mensagem para nota        
//============================================================================================================================
oReport:PrintText("DATA DE ENTREGA: "	+DTOC(aCabPed[32]),oReport:Row(),20)											// C5_I_DTENT
oReport:PrintText("TIPO DE CARGA: "		+IIF(aCabPed[33]="1","PALETIZADA","BATIDA"),oReport:Row(),500)				// C5_I_TIPCA (1-Paletizada ou 2-Batida) 
oReport:PrintText("QUANT DE CHAPA: "	+aCabPed[34],oReport:Row(),1000) 										   		// C5_I_CHAPA 
oReport:PrintText("HORA DA DESCARGA: "	+aCabPed[35],oReport:Row(),1500) 									   			// C5_I_HORDE  
oReport:PrintText("SENHA DA DESCARGA: "	+aCabPed[36],oReport:Row(),2000)   									   			// C5_I_SENHA 
oReport:PrintText("CUSTO DA DESCARGA: "	+Transform(aCabPed[37],"@EZ 999,999.99"),oReport:Row(),2500) 					// C5_I_CUSDE   
oReport:SkipLine()     

oReport:PrintText("MENSAGEM PARA NOTA: "+aCabPed[38],oReport:Row(),20) 									   			// C5_MENNOTA
oReport:SkipLine()  

oReport:Line(oReport:Row(),10,oReport:Row()+5,3000) 

Return( .T. )

/*
===============================================================================================================================
Programa----------: ROMD007I4
Autor-------------: Marco Bianchi
Data da Criacao---: 11/07/06 
===============================================================================================================================
Descrição---------: Impressão do item da nota  
===============================================================================================================================
Parametros--------: nItem,nPesLiq,nPesBru,oReport,oPreNota,aCabPed,aItemPed
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMD007I4(nItem,nPesLiq,nPesBru,oReport,oPreNota,aCabPed,aItemPed)

//  array aitemped                                             
//  --------------                                             
//  01 c6_item           08 c6_prcven         15 c6_descont    
//  02 c6_produto        09 c6_nota           16 c6_local      
//  03 c6_descri         10 c6_serie          17 c6_qtdemp     
//  04 c6_tes            11 c6_cli            18 c6_qtdlib     
//  05 c6_cf             12 c6_loja           19 c6_qtdent     
//  06 c6_um             13 c6_valor                           
//  07 c6_qtdven         14 c6_entreg                          

Local cChaveD2	:= ""
oReport:Section(1):Cell("AITEM13"):SetBlock({|| aItemPed[nItem][13]+nValImp})
oReport:Section(1):Cell("NULTLIB"):SetBlock({|| nUltLib})

nValImp := 0
nUltLib := 0
If cPaisLoc == "BRA"
	If aCabPed[1] == "P"
		nValImp := 0
	Else
		nValImp	:=	MaFisRet(nItem,"IT_VALIPI")
	Endif
Else
	nValImp	:=	MaRetIncIV(nItem,"2")
Endif

dbSelectArea("SB1")
dbSeek(xFilial("SB1")+aItemPed[nItem][2])  //C6_PRODUTO

//c6_nota c6_serie c6_cli c6_loja c6_produto
cChaveD2 := xFilial("SD2")+aItemPed[nItem][09]+aItemPed[nItem][10]+aItemPed[nItem][11]+aItemPed[nItem][12]+aItemPed[nItem][02]
dbSelectArea("SD2")
dbSetOrder(3)
dbSeek(cChaveD2)
While !Eof() .and. cChaveD2 = xFilial("SD2")+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD
	nUltLib := D2_QUANT
	dbSkip()
EndDo

oReport:Section(1):PrintLine()

nPesLiq	+= SB1->B1_PESO * aItemPed[nItem][07]		//C6_QTDVEN
nPesBru += SB1->B1_PESBRU * aItemPed[nItem][07]	//C6_QTDVEN

Return (Nil)


/*
===============================================================================================================================
Programa----------: ROMS0074R
Autor-------------: Marco Bianchi
Data da Criacao---: 11/07/06 
===============================================================================================================================
Descrição---------: Rodapé da nota
===============================================================================================================================
Parametros--------: nPesLiq,nPesBru,aC5Rodape,lFinal,oReport
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMS0074R(nPesLiq,nPesBru,aC5Rodape,lFinal,oReport)

Local nx     := 0
DEFAULT lFinal := .F.

If lFinal

	oReport:SkipLine()
	oReport:Line(oReport:Row(),10,oReport:Row(),3000)

	oReport:SkipLine()
	oReport:Section(2):Init()
	oReport:Section(2):PrintLine()
	oReport:Section(2):Finish()

Endif	

oReport:SkipLine()
oReport:PrintText("PESO BRUTO ------------->"+STR(If(aC5Rodape[1][1] > 0,aC5Rodape[1][1],nPesBru)),1880,30)	 
oReport:PrintText("PESO LIQUIDO ----------->"+STR(If(aC5Rodape[1][2] > 0,aC5Rodape[1][2],nPesLiq)),1910,30)	 
oReport:PrintText("VOLUMES ---------------->",1940,30)															 
oReport:PrintText("SEPARADO  POR ---------->",1970,30)															 
oReport:PrintText("CONFERIDO POR ---------->",2000,30)															 
oReport:PrintText("D A T A ---------------->",2030,30)															 
                            
If !Empty(Alltrim((aC5Rodape[1][8])))
oReport:PrintText("O B S COMERCIAL --------> "+Alltrim((aC5Rodape[1][8])) ,2060,30)
EndIF																 
If !Empty(Alltrim((aC5Rodape[1][9])))
oReport:PrintText("RECEBIMENTO NO CLIENTE -> "+Alltrim((aC5Rodape[1][9])),2090,30)															 
EndIf

oReport:PrintText("DESCONTOS: ",2120,30)															 
oReport:PrintText(Transform(aC5Rodape[1][3],"99.99"),2120,200)
oReport:PrintText(Transform(aC5Rodape[1][4],"99.99"),2120,300)
oReport:PrintText(Transform(aC5Rodape[1][5],"99.99"),2120,400)
oReport:PrintText(Transform(aC5Rodape[1][6],"99.99"),2120,500)

aAux:=strtokarr(aC5Rodape[1][7],";")
nXLinha:=2150
for nx:=1 to len(aAux)
	oReport:PrintText(aAux[nx],nXLinha,30)
	nXLinha+=30
Next nx

Return( NIL )

/*
===============================================================================================================================
Programa----------: ROMS007L
Autor-------------: Henry Fila 
Data da Criacao---: 26.08.02 
===============================================================================================================================
Descrição---------: Função que retorna os pedidos do cliente   
===============================================================================================================================
Parametros--------: cPedido
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMS007L(cPedido)

Local aPedidos := {}
Local aArea    := GetArea()
Local aAreaSC6 := SC6->(GetArea())

SC6->(dbSetOrder(1))
SC6->(MsSeek(xFilial("SC6")+cPedido))

While !(SC6->(Eof())) .And. xFilial("SC6")==SC6->C6_FILIAL .And.;
		SC6->C6_NUM == cPedido

	If !Empty(SC6->C6_PEDCLI) .and. Ascan(aPedidos,SC6->C6_PEDCLI) = 0
		Aadd(aPedidos, SC6->C6_PEDCLI )
	Endif		

	SC6->(dbSkip())
Enddo

RestArea(aAreaSC6)
RestArea(aArea)

Return(aPedidos)

/*
===============================================================================================================================
Programa----------: ROMS007G
Autor-------------: Eduardo Riera  
Data da Criacao---: 17.11.2005
===============================================================================================================================
Descrição---------: Inicializa as variaveis utilizadas no Programa   
===============================================================================================================================
Parametros--------: aFisGet,aFisGetSC5
===============================================================================================================================
Retorno-----------: Nenhum
===============================================================================================================================*/
Static Function ROMS007G(aFisGet,aFisGetSC5)

Local cValid      := ""
Local cReferencia := ""
Local nPosIni     := 0
Local nLen        := 0
Local _nni			:= 0

If aFisGet == Nil

	aFisGet	:= {}

	_acamps := SC6->(Dbstruct())

	For _nni := 1 to len(_acamps)

		_x3valid := GetSx3Cache( _acamps[_nni][1], "X3_VALID" )
		_x3vlduser := GetSx3Cache( _acamps[_nni][1], "X3_VLDUSER" )
		cValid := UPPER(_x3valid+_x3vlduser)

		If 'MAFISGET("'$cValid
			nPosIni 	:= AT('MAFISGET("',cValid)+10
			nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
			cReferencia := Substr(cValid,nPosIni,nLen)
			aAdd(aFisGet,{cReferencia,_acamps[_nni][1],MaFisOrdem(cReferencia)})
		EndIf
		If 'MAFISREF("'$cValid
			nPosIni		:= AT('MAFISREF("',cValid) + 10
			cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
			aAdd(aFisGet,{cReferencia,_acamps[_nni][1],MaFisOrdem(cReferencia)})
		EndIf

	Next

	aSort(aFisGet,,,{|x,y| x[3]<y[3]})

EndIf


If aFisGetSC5 == Nil
	
	_acamps2 := SC5->(Dbstruct())
	aFisGetSC5	:= {}
	_nni := 1

	For _nni := 1 to len(_acamps2)

		_x3valid := GetSx3Cache( _acamps2[_nni][1], "X3_VALID" )
		_x3vlduser := GetSx3Cache( _acamps2[_nni][1], "X3_VLDUSER" )
		cValid := UPPER(_x3valid+_x3vlduser)

		If 'MAFISGET("'$cValid
			nPosIni 	:= AT('MAFISGET("',cValid)+10
			nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
			cReferencia := Substr(cValid,nPosIni,nLen)
			aAdd(aFisGetSC5,{cReferencia,_acamps2[_nni][1],MaFisOrdem(cReferencia)})
		EndIf
		If 'MAFISREF("'$cValid
			nPosIni		:= AT('MAFISREF("',cValid) + 10
			cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
			aAdd(aFisGetSC5,{cReferencia,_acamps2[_nni][1],MaFisOrdem(cReferencia)})
		EndIf
		dbSkip()
	
	Next
	aSort(aFisGetSC5,,,{|x,y| x[3]<y[3]})
	
	EndIf
MaFisEnd()
Return(.T.)

/*
===============================================================================================================================
Programa--------: ROMS007A()
Autor-----------: Jeovane
Data da Criacao-: 24/09/2008
===============================================================================================================================
Descrição-------: Funcao usada para pegar carga
===============================================================================================================================
Parametros------: _cFil,_cPedido
===============================================================================================================================
Retorno---------: _cCargas
===============================================================================================================================*/
STATIC FUNCTION ROMS007A(_cFil,_cPedido)
 
Local _cQuery   := '' 
Local _cAliasCar:= GetNextAlias() 
Local _cCargas  := ''    
Local _aArea    := GetArea()


	_cQuery := "SELECT"  
	_cQuery += " DAI_COD " 
	_cQuery += "FROM " + RetSqlName("DAI") + " DAI "  
	_cQuery += "WHERE"  
	_cQuery += " DAI.D_E_L_E_T_ = ' '"
	_cQuery += " AND DAI.DAI_FILIAL = '" + _cFil    + "'"               
	_cQuery += " AND DAI.DAI_PEDIDO = '" + _cPedido + "'" 
    
	If Select(_cAliasCar) > 0
		(_cAliasCar)->(dbCloseArea())
	EndIf                                                     
	
	dbUseArea( .T., "TOPCONN",TcGenQry(,,_cQuery),_cAliasCar,.T.,.T.)
	
	dbSelectArea(_cAliasCar)
	(_cAliasCar)->(dbGotop())  
	
	While (_cAliasCar)->(!Eof())  
	         
		_cCargas+= AllTrim((_cAliasCar)->DAI_COD) + '/'
	
	(_cAliasCar)->(dbSkip())
	EndDo 
	                              
	If Len(AllTrim(_cCargas)) > 6  
		                                               
		//Para remover a ultima barra
		_cCargas:= SubStr(_cCargas,1,Len(_cCargas) - 1)
	
	EndIf
	
	dbSelectArea(_cAliasCar)     
	(_cAliasCar)->(dbCloseArea())               
	
	restArea(_aArea)

Return _cCargas